AWSTemplateFormatVersion: '2010-09-09'
Description: 'The containers and service configuration for CiviForm.'
Mappings:
  Images:
    prod:
      image: public.ecr.aws/t1q6b4h2/universal-application-tool:prod
    staging:
      image: public.ecr.aws/t1q6b4h2/universal-application-tool:latest
  Notifications:
    prod:
      sender: civiform-notification@seattle.gov
    staging:
      sender: civiForm.staging@seattle.gov
  AdminGroup:
    prod:
      group: ad\ITD_CiviForm_Admins
    staging:
      group: 5909e7f3-3f4c-4ad1-93e8-17e6ba6ab8a3
  Registration:
    prod:
      uri: https://login.seattle.gov/#/registration?appName=CiviForm
    staging:
      uri: https://qalogin.seattle.gov:12443/#/registration?appName=CIVIFORM_STAGE
  IdcsDiscoveryUri:
    prod:
      uri: https://idcs-3359adb31e35415e8c1729c5c8098c6d.identity.oraclecloud.com/.well-known/openid-configuration
    staging:
      uri: https://idcs-f582fefb879b4db5a88a370e8f2f6013.identity.oraclecloud.com/.well-known/openid-configuration
  AdfsDiscoveryUri:
    prod:
      uri: https://sts.seattle.gov/adfs/.well-known/openid-configuration
    staging:
      uri: https://login.microsoftonline.com/78e61e45-6beb-4009-8f99-359d8b54f41b/v2.0/.well-known/openid-configuration
  AdfsAdditionalScopes:
    prod:
      value: allatclaims
    staging:
      value: ''
  AdfsGroupsAttributeName:
    prod:
      value: group
    staging:
      value: groups      
  FeatureFlagOverrides:
    prod:
      enabled: false
    staging:
      enabled: true
  ApplicantOidcProviderLogout:
    prod:
      enabled: true
    staging:
      enabled: true
  ApplicantOidcProviderLogoutUri:
    prod:
      uri: https://login.seattle.gov/#/logout?appName=CIVIFORM
    staging:
      uri: https://qalogin.seattle.gov:12443/#/logout?appName=CIVIFORM_STAGE
  PhoneQuestionTypeEnabled:
    prod:
      enabled: true
    staging:
      enabled: true
  EsriAddressCorrectionEnabled:
    prod:
      enabled: true
    staging:
      enabled: true
  EsriAddressServiceAreaValidationEnabled:
    prod:
      enabled: true
    staging:
      enabled: true
  EsriFindAddressCandidatesUri:
    prod:
      uri: https://gisdata.seattle.gov/cosgis/rest/services/locators/AddressPoints/GeocodeServer/findAddressCandidates
    staging:
      uri: https://gisdata.seattle.gov/cosgis/rest/services/locators/AddressPoints/GeocodeServer/findAddressCandidates
  EsriAddressServiceAreaValidationUri:
    prod:
      uri: https://gisdata.seattle.gov/server/rest/services/COS/Seattle_City_Limits/MapServer/1/query
    staging:
      uri: https://gisdata.seattle.gov/server/rest/services/COS/Seattle_City_Limits/MapServer/1/query
  ProgramReadOnlyViewEnabled:
    prod:
      enabled: true
    staging:
      enabled: true
  BypassLoginLanguageScreens:
    prod:
      enabled: true
    staging:
      enabled: true      
Parameters:
  Environment:
    Type: String
    AllowedValues: ["staging", "prod"]
    Description: "Staging or prod environment"
  S3TaskRole:
    Description: The task role for the containers.
    Type: String
  DBAddress:
    Description: The address at which the database can be reached.
    Type: String
  DBPort:
    Description: The port on which the database can be reached.
    Type: String
  LBTargetName:
    Description: The load balancer target group to add new containers to.
    Type: String
  ContainerSecurityGroup:
    Description: The security group to use for the containers.
    Type: String
  PrivateSubnet1:
    Description: The private subnets to add the database to.
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2:
    Description: The private subnet to add the database to.
    Type: AWS::EC2::Subnet::Id
  S3BucketName:
    Description: S3 bucket name for file storage.
    Type: String
  DBUsername:
    NoEcho: 'true'
    Description: Username for database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBPassword:
    NoEcho: 'true'
    Description: Password for database access
    Type: String
  SecretKey:
    NoEcho: 'true'
    Description: Secret key for Play application
    Type: String
  DomainName:
    Description: The domain name to use as the base URL.
    Type: String
  MeasurementId:
    Description: The Google Analytics measurement ID.
    Type: String
Resources:
  ecscluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Join ["-", [!Ref Environment, "civiform-fargate-cluster"]]
      CapacityProviders:
        - FARGATE
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
  ecsservice:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref 'ecscluster'
      DesiredCount: 2
      TaskDefinition: !Ref 'ecstaskdef'
      LoadBalancers:
        - ContainerName: !Join ["-", [!Ref Environment, "civiform-container"]]
          ContainerPort: 9000
          TargetGroupArn: !Ref 'LBTargetName'
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref 'ContainerSecurityGroup'
          Subnets:
            - !Ref 'PrivateSubnet1'
            - !Ref 'PrivateSubnet2'
  loggroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join [".", [!Ref Environment, "civiform.lg"]]
      RetentionInDays: 90
  ecstaskdef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !Ref S3TaskRole
      ExecutionRoleArn: arn:aws:iam::405662711265:role/ecs-task-role
      NetworkMode: awsvpc
      Cpu: 1024
      Memory: 8192
      ContainerDefinitions:
        - Name: !Join ["-", [!Ref Environment, "civiform-container"]]
          Image: !FindInMap [Images, !Ref Environment, image]
          Environment:
            - Name: DB_JDBC_STRING
              Value: !Join
                - ''
                - - jdbc:postgresql://
                  - !Ref 'DBAddress'
                  - ':'
                  - !Ref 'DBPort'
                  - /postgres
            - Name: DB_USERNAME
              Value: !Ref 'DBUsername'
            - Name: DB_PASSWORD
              Value: !Sub '{{resolve:secretsmanager:${DBPassword}}}'
            - Name: SECRET_KEY
              Value: !Sub '{{resolve:secretsmanager:${SecretKey}}}'
            - Name: AWS_REGION
              Value: !Sub '${AWS::Region}'
            - Name: AWS_SES_SENDER
              Value: !FindInMap [Notifications, !Ref Environment, sender]
            - Name: AWS_S3_BUCKET_NAME
              Value: !Ref 'S3BucketName'
            - Name: IDCS_CLIENT_ID
              Value: !Sub '{{resolve:secretsmanager:${Environment}-oidc-secrets:SecretString:IDCS_CLIENT_ID}}'
            - Name: IDCS_SECRET
              Value: !Sub '{{resolve:secretsmanager:${Environment}-oidc-secrets:SecretString:IDCS_SECRET}}'
            - Name: IDCS_DISCOVERY_URI
              Value: !FindInMap [IdcsDiscoveryUri, !Ref Environment, uri]
            - Name: ADFS_CLIENT_ID
              Value: !Sub '{{resolve:secretsmanager:${Environment}-oidc-secrets:SecretString:ADFS_CLIENT_ID}}'
            - Name: ADFS_SECRET
              Value: !Sub '{{resolve:secretsmanager:${Environment}-oidc-secrets:SecretString:ADFS_SECRET}}'
            - Name: ADFS_DISCOVERY_URI
              Value: !FindInMap [AdfsDiscoveryUri, !Ref Environment, uri]
            - Name: APPLICANT_REGISTER_URI
              Value: !FindInMap [Registration, !Ref Environment, uri]
            - Name: ADFS_GLOBAL_ADMIN_GROUP
              Value: !FindInMap [AdminGroup, !Ref Environment, group]
            - Name: WHITELABEL_CIVIC_ENTITY_SHORT_NAME
              Value: 'Seattle'
            - Name: WHITELABEL_CIVIC_ENTITY_FULL_NAME
              Value: 'City of Seattle'
            - Name: BASE_URL
              Value: !Sub "https://${DomainName}"
            - Name: MEASUREMENT_ID
              Value: !Sub "${MeasurementId}"
            - Name: CIVIFORM_API_SECRET_SALT
              Value: !Sub '{{resolve:secretsmanager:${Environment}-api-secret-salt:SecretString:CIVIFORM_API_SECRET_SALT}}'
            - Name: DATABASE_APPLY_DESTRUCTIVE_CHANGES
              Value: 'true'
            - Name: CIVIFORM_API_KEYS_BAN_GLOBAL_SUBNET
              Value: 'false'
            - Name: FEATURE_FLAG_OVERRIDES_ENABLED
              Value: !FindInMap [FeatureFlagOverrides, !Ref Environment, enabled]
            - Name: APPLICANT_OIDC_PROVIDER_LOGOUT
              Value: !FindInMap [ApplicantOidcProviderLogout, !Ref Environment, enabled]
            - Name: APPLICANT_OIDC_OVERRIDE_LOGOUT_URL
              Value: !FindInMap [ApplicantOidcProviderLogoutUri, !Ref Environment, uri]
            - Name: APPLICANT_OIDC_POST_LOGOUT_REDIRECT_PARAM
              Value: ''
            - Name: ALLOW_CIVIFORM_ADMIN_ACCESS_PROGRAMS
              Value: 'true'
            - Name: STAGING_ADMIN_LIST
              Value: 'civiForm.staging@seattle.gov'
            - Name: STAGING_TI_LIST
              Value: 'civiForm.staging@seattle.gov'
            - Name: STAGING_APPLICANT_LIST
              Value: 'civiForm.staging@seattle.gov'
            - Name: STAGING_HOSTNAME
              Value: 'civiformstage.seattle.gov'
            - Name: ESRI_ADDRESS_CORRECTION_ENABLED
              Value: !FindInMap [EsriAddressCorrectionEnabled, !Ref Environment, enabled]
            - Name: ESRI_FIND_ADDRESS_CANDIDATES_URL
              Value: !FindInMap [EsriFindAddressCandidatesUri, !Ref Environment, uri]
            - Name: ESRI_ADDRESS_SERVICE_AREA_VALIDATION_ENABLED
              Value: !FindInMap [EsriAddressServiceAreaValidationEnabled, !Ref Environment, enabled]
            - Name: ESRI_ADDRESS_SERVICE_AREA_VALIDATION_LABELS.0
              Value: 'Seattle'
            - Name: ESRI_ADDRESS_SERVICE_AREA_VALIDATION_IDS.0
              Value: 'Seattle'
            - Name: ESRI_ADDRESS_SERVICE_AREA_VALIDATION_URLS.0
              Value: !FindInMap [EsriAddressServiceAreaValidationUri, !Ref Environment, uri]
            - Name: ESRI_ADDRESS_SERVICE_AREA_VALIDATION_ATTRIBUTES.0
              Value: 'CITYNAME'
            - Name: PROGRAM_READ_ONLY_VIEW_ENABLED
              Value: !FindInMap [ProgramReadOnlyViewEnabled, !Ref Environment, enabled]
            - Name: BYPASS_LOGIN_LANGUAGE_SCREENS
              Value: !FindInMap [BypassLoginLanguageScreens, !Ref Environment, enabled]
            - Name: PHONE_QUESTION_TYPE_ENABLED
              Value: !FindInMap [PhoneQuestionTypeEnabled, !Ref Environment, enabled]
            - Name: SUPPORT_EMAIL_ADDRESS
              Value: CiviForm@seattle.gov
            - Name: COMMON_INTAKE_MORE_RESOURCES_LINK_TEXT
              Value: Affordable Seattle
            - Name: COMMON_INTAKE_MORE_RESOURCES_LINK_HREF
              Value: https://www.affordableseattle.org
            - Name: WHITELABEL_LOGO_WITH_NAME_URL
              Value: https://raw.githubusercontent.com/seattle-civiform/civiform-deploy-tf/main/logos/civiform-long-logo.png
            - Name: WHITELABEL_SMALL_LOGO_URL
              Value: https://raw.githubusercontent.com/seattle-civiform/civiform-deploy-tf/main/logos/civiform-small-logo.png
            - Name: FAVICON_URL
              Value: https://seattle.gov/favicon.ico


            - Name: ADFS_ADDITIONAL_SCOPES
              Value: !FindInMap [AdfsAdditionalScopes, !Ref Environment, value]
            - Name: AD_GROUPS_ATTRIBUTE_NAME
              Value: !FindInMap [AdfsGroupsAttributeName, !Ref Environment, value]
          Cpu: 1024
          Memory: 8192
          PortMappings:
            - ContainerPort: '9000'
              HostPort: '9000'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'loggroup'
              awslogs-region: !Sub '${AWS::Region}'
              awslogs-stream-prefix: civiformsrv
          Essential: true
  autoscalingtarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MinCapacity: 2
      MaxCapacity: 5
      ResourceId: !Join ['/', [service, !Ref ecscluster, !GetAtt ecsservice.Name]]
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      RoleARN: arn:aws:iam::405662711265:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
  autoscalingpolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: CiviFormAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref autoscalingtarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        ScaleInCooldown: 10
        ScaleOutCooldown: 10
        # Keep things at or lower than 75% CPU utilization
        TargetValue: 75
Outputs:
  ECSService:
    Description: The ARN of the service.
    Value: !Ref 'ecsservice'
    Export:
      Name: !Sub '${AWS::StackName}-ECSService'
  ECSCluster:
    Description: The ARN of the cluster.
    Value: !GetAtt 'ecscluster.Arn'
    Export:
      Name: !Sub '${AWS::StackName}-ECSCluster'
