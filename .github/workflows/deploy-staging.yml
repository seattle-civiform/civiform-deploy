name: Seattle Staging Deploy

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 12 1/1 * *'

permissions: read-all

# Two probers running at once can break each other.
concurrency:
  group: stagingenvironment
  cancel-in-progress: true

jobs:
  run_prober:
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack Start
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: 'C03UXPUEXU4'
          slack-message: ":space-needle: Starting Seattle Staging Deploy."
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: resolve latest snapshot tag
        run: source bin/resolve-latest-snapshot-tag
        
      - name: Deploy Seattle staging
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
        run: bin/deploy -e staging -i civiform/civiform:latest

      - name: Run Prober tests
        if: ${{ false }}  # Temporarily Disable 
        env:
          TEST_USER_LOGIN: ${{ secrets.TEST_USER_LOGIN }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 70
          max_attempts: 2
          retry_wait_seconds: 30
          command: bin/run-prober
      
      - name: Notify Slack Complete
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: 'C03UXPUEXU4'
          slack-message: ":space-needle: ${{ env.STATUS_ICON }} Seattle Staging Deploy for ${{ env.LATEST_SNAPSHOT_TAG }}: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ job.status }}>"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          STATUS_ICON: ${{fromJSON('[":no_entry:", ":white_check_mark:"]')[job.status == 'success']}}
